using System;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using SII.Framework.Interfaces;

namespace SII.HCD.BackOffice.Entities
{
    [DataContract()]
    [Serializable()]
    public class HumanResourceBasicEntity : IStatusEntity, ICloneable
    {
        #region Properties
        [DataMember()]
        public int ID { get; set; }
        [DataMember()]
        public PersonBaseEntity Person { get; set; }
        [DataMember()]
        public DateTime LastUpdated { get; set; }
        [DataMember()]
        public String ModifiedBy { get; set; }
        [DataMember()]
        public Int64 DBTimeStamp { get; set; }
        [DataMember()]
        public EditStatusEntity EditStatus { get; set; }
        #endregion

        #region Constructors
        public HumanResourceBasicEntity() : this(0, null, DateTime.Now, String.Empty, 0) { }

        public HumanResourceBasicEntity(int id, PersonBaseEntity person, DateTime lastUpdated, string modifiedBy, Int64 dbTimeStamp)
        {
            ID = id;
            Person = person;
            LastUpdated = lastUpdated;
            ModifiedBy = modifiedBy;
            DBTimeStamp = dbTimeStamp;
            EditStatus = new EditStatusEntity();
        }
        #endregion

        #region ICloneable Members
        public virtual object Clone()
        {
            object clonedObject = null;
            MemoryStream ms = new MemoryStream();
            try
            {
                BinaryFormatter bf = new BinaryFormatter();

                bf.Serialize(ms, this);
                ms.Seek(0, SeekOrigin.Begin);
                clonedObject = bf.Deserialize(ms);
            }
            finally
            {
                ms.Close();
            }
            return clonedObject;
        }
        #endregion
    }
}
